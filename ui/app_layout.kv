ScreenManager:
    MainScreen:

<MainScreen@Screen>:
    name: 'main_screen'
    BoxLayout:
        orientation: 'vertical'
        padding: dp(10)
        spacing: dp(10)

        BoxLayout:
            size_hint_y: None
            height: dp(120) # Höhe für Eingabefelder anpassen
            orientation: 'horizontal' # Oder 'vertical' wenn mehr Platz pro Setting
            spacing: dp(10)

            GridLayout:
                cols: 2
                spacing: dp(5)
                size_hint_x: 0.7

                Label:
                    text: 'Größe (Potenz von 2^n + 1):'
                    halign: 'right'
                    valign: 'middle'
                    text_size: self.width, None
                TextInput:
                    id: size_input
                    text: '9' # (2^3)+1 => 257x257 Grid, also hier n = 8 (da grid_size=(1<<size)+1)
                               # Besser: size = n, und grid_size = (1<<n)+1
                               # oder: size = grid_dimension (z.B. 257) und dann n berechnen
                    input_filter: 'int'
                    multiline: False

                Label:
                    text: 'Rauheit (0.0 - 1.0+):'
                    halign: 'right'
                    valign: 'middle'
                    text_size: self.width, None
                TextInput:
                    id: roughness_input
                    text: '0.7'
                    input_filter: 'float' # oder 'int' je nach Definition
                    multiline: False

                Label:
                    text: 'Seed (optional):'
                    halign: 'right'
                    valign: 'middle'
                    text_size: self.width, None
                TextInput:
                    id: seed_input
                    multiline: False
            
            BoxLayout: # Für Buttons rechts neben den Inputs
                orientation: 'vertical'
                size_hint_x: 0.3
                spacing: dp(5)
                Button:
                    id: generate_button
                    text: 'Generieren'
                    on_press: root.start_generation_async()
                Button:
                    id: save_button
                    text: 'Speichern'
                    on_press: root.save_current_terrain()
                Button:
                    id: load_button
                    text: 'Laden'
                    on_press: root.load_terrain_from_file()


        # Platzhalter für Terrain-Anzeige (kann ein eigenes Widget sein)
        TerrainDisplayWidget:
            id: terrain_display_widget
            size_hint: 1, 1 # Nimmt den Rest des Platzes ein

        Label:
            id: status_label
            text: 'Bereit.'
            size_hint_y: None
            height: dp(30)

<TerrainDisplayWidget@Widget>: # Einfaches Beispiel, kann komplexer werden
    canvas:
        Color:
            rgba: 0.2, 0.2, 0.2, 1 # Hintergrundfarbe
        Rectangle:
            pos: self.pos
            size: self.size
    Image:
        id: terrain_image
        source: '' # Wird später gesetzt
        allow_stretch: True
        keep_ratio: False # Oder True, je nach Wunsch
        size: root.size 
        pos: root.pos
